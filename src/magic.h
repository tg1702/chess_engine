#include <iostream>
#include "lookup.h"
#include <array>

constexpr std::array<uint64_t, 64> bishopMagics = {
	1443405913991151632ULL,
	13598761985015904ULL,
	2289192907309057ULL,
	145280672565559296ULL,
	1158554337042268194ULL,
	564069329272834ULL,
	864762699928568836ULL,
	1153207454974214656ULL,
	2682948025352712ULL,
	1153079903018632336ULL,
	9223376452089675778ULL,
	648645907281128512ULL,
	37392253796352ULL,
	9224016393653977152ULL,
	612490790837421056ULL,
	432345710341425152ULL,
	2252075269882368ULL,
	
	5837298504665923840ULL,
	2814801441063112ULL,
	41658399667020809ULL,
	141098276102152ULL,
	577024256316048384ULL,
	
	12106522012167442432ULL,
	288283154924706304ULL,
	11971487973000228ULL,
	1133598098981924ULL,
	11697123666852061440ULL,
	1157429502360424736ULL,
	
	77269283725385728ULL,
	36108511628795904ULL,
	2551984003744000ULL,
	15199786454812672ULL,
	577604278777045760ULL,
	578435501024874496ULL,
	9288983605479424ULL,
	4614012636571894048ULL,
	1333913230346944544ULL,
	157627098280886336ULL,
	10376861443556639760ULL,
	4612326484521059328ULL,
	2289529021599744ULL,
	297381130662316288ULL,
	9259682379818078208ULL,
	587720034848348160ULL,
	9011599784284672ULL,
	45036550328680960ULL,
	27311894880649408ULL,
	73184610854405152ULL,
	18894626555985968ULL,
	1171499982781580296ULL,
	38518358287104ULL,
	2341871806778441856ULL,
	77343096832ULL,
	17731789328384ULL,
	27023807559237952ULL,
	184657523286081544ULL,
	18122176452444210ULL,
	18016653434552840ULL,
	4684027290769002496ULL,
	651787065623586ULL,
	62672431350283ULL,
	4611826790410225696ULL,
	72066527645436416ULL,
	9241404029798483104ULL,
};


constexpr std::array<uint64_t, 64> rookMagics = {
36028883992084514ULL,
1170938239581683908ULL,
216182683101822992ULL,
216182815425888388ULL,
72062713655722512ULL,
360292370519294208ULL,
108227678317838848ULL,
36029005325026560ULL,
2378041341813727360ULL,
633456140750849ULL,
56435801625747456ULL,
9368050458352422945ULL,
6944691534700872704ULL,
1018376680487847984ULL,
1194298330478411780ULL,
72339073309638734ULL,
864832415718260736ULL,
15276632699335352325ULL,
58274653323521ULL,
2882445050103465984ULL,
9223513324702935042ULL,
18155686223430144ULL,
16718632853046364178ULL,
864834065117907028ULL,
5116159556174506112ULL,
239904642161467392ULL,
70583494738436ULL,
12756450379081712256ULL,
2380719753218490496ULL,
40536829073563664ULL,
144405613777195010ULL,
72626084499720420ULL,
288300747051765796ULL,
1747396932453539840ULL,
9007546090135808ULL,
585476749807063040ULL,
2739745481990082816ULL,
72621094057542656ULL,
4755878206744035696ULL,
49630344567062628ULL,
36028934470516736ULL,
1229482835732086784ULL,
5066895394996288ULL,
288383208536473632ULL,
4774098402973646864ULL,
2312882082721857664ULL,
108669717140733977ULL,
45163609558482945ULL,
4631987712507838720ULL,
4629770854937428608ULL,
35184657318144ULL,
10376662996715307136ULL,
2341876210050564480ULL,
72339635950851840ULL,
18185177269248ULL,
291045452890211840ULL,
703963695480866ULL,
2882620983510829073ULL,
607070038540306ULL,
378865370464806946ULL,
4648278334622408706ULL,
144396740429105281ULL,
11267799490007044ULL,
288795680837768194ULL,
};
/*static const std::array<uint64_t, 64> bishopMagics = []{
	std::array<uint64_t, 64> result{};
	for(size_t square = 0; square < 64; square++){
		uint64_t magic = generateMagicNumber(square, bishopOccupancyMasks[square], 1);
		result[square] = magic;	
	}
	return result;
}();
*/

/*
static const std::array<uint64_t, 64> rookMagics = []{
	std::array<uint64_t, 64> result{};
	for(size_t square = 0; square < 64; square++){
		uint64_t magic = generateMagicNumber(square, rookOccupancyMasks[square], 0);
		result[square] = magic;	
	}
	return result;
}();
*/
static const std::array<std::array<uint64_t, TABLE_SIZE>, 64> rookOccCombos = [] {

	std::array<std::array<uint64_t, TABLE_SIZE>, 64> result{};
	for(size_t square = 0; square < 64; square++){
		   
		result[square] = createBlockedBoards(rookOccupancyMasks[square]);		
	}

	return result;

}();

static const std::array<std::array<uint64_t, TABLE_SIZE>, 64> bishopOccCombos = [] {

	std::array<std::array<uint64_t, TABLE_SIZE>, 64> result{};
	for(size_t square = 0; square < 64; square++){
		   
		result[square] = createBlockedBoards(bishopOccupancyMasks[square]);		
	}

	return result;

}();

static const std::array<std::array<uint64_t, 512>, 64> bishopMoveList = [] {
	
	std::array<std::array<uint64_t, 512>, 64> allBishopLookups{};
	
	for (size_t square = 0; square < 64; square++){
		int MAX_PATTERNS = 1 << (64 - bishopShifts[square]);    
		std::array<uint64_t, 512> bishopLookup {};	
		
		for (int i = 0; i < MAX_PATTERNS; i++){
			int index = utils::generateMagicIndex(bishopOccCombos[square][i], bishopMagics[square], square, 1);
			bishopLookup[index] = calcLegalBishopMoves(square, bishopOccCombos[square][i]);
		}
		allBishopLookups[square] = bishopLookup;
	}
	return allBishopLookups;
}();

static const std::array<std::array<uint64_t, TABLE_SIZE>, 64> rookMoveList = [] {
	
	std::array<std::array<uint64_t, TABLE_SIZE>, 64> allRookLookups{};
	
	for (size_t square = 0; square < 64; square++){
		int MAX_PATTERNS = 1 << (64 - rookShifts[square]);    
		std::array<uint64_t, TABLE_SIZE> rookLookup {};	
		
		for (int i = 0; i < MAX_PATTERNS; i++){
			int index = utils::generateMagicIndex(rookOccCombos[square][i], rookMagics[square], square, 0);
			rookLookup[index] = calcLegalRookMoves(square, rookOccCombos[square][i]);
		}
		allRookLookups[square] = rookLookup;
	}
	return allRookLookups;
}();

